@model Tuple<List<PasswordManagementSystem.Core.Models.User>, List<List<PasswordManagementSystem.Core.Models.Role>>, List<PasswordManagementSystem.Core.Models.Company>, List<PasswordManagementSystem.Core.Models.Role>, int?>

@{
    Layout = "~/Views/Shared/AdminSideMenuLayout.cshtml";
}

@section Styles {
    <link href="~/css/admin/AddUpdateUser.css" rel="stylesheet">
}

<div class="container">
    <input type="hidden" id="sessionUserId" value="@Model.Item5" />
    <button id="addUserButton" class="btn btn-green">Add New User</button>

    <ul class="user-list">
        @foreach (var user in Model.Item1)
        {
            <li class="user-item" data-id="@user.UserId">@user.Name</li>
        }
    </ul>
</div>

<!-- User Add/Edit Modal -->
<div id="userModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <form id="userForm">
            <input type="hidden" name="UserId" id="userId" value="0" />
            <label for="name">Name:</label>
            <input type="text" id="name" name="Name" required />

            <label for="email">Email:</label>
            <input type="email" id="email" name="Email" required />

            <label for="company">Company:</label>
            <input type="text" id="company" name="Company" readonly />

            <label for="roles">Roles:</label>
            <div id="rolesList">
                @foreach (var role in Model.Item4)
                {
                    <div>
                        <input type="checkbox" name="Roles" value="@role.RoleId" id="role_@role.RoleId" class="role-checkbox">
                        <label for="role_@role.RoleId">@role.RoleName</label>
                    </div>
                }
            </div>

            <label for="password">Password:</label>
            <input type="password" id="password" name="Password" readonly />

            <button type="submit" class="btn btn-green" id="saveButton">Save</button>
            <button type="button" id="deleteButton" class="btn btn-red">Delete</button>
            <button type="button" class="btn btn-green" id="createButton">Create</button>
        </form>
    </div>
</div>

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            const sessionUserId = $('#sessionUserId').val();

            // Open modal to add new user
            $('#addUserButton').on('click', function () {
                $(`#password`).prop('readonly', false);
                openModal(0);
            });

            // Open modal to edit existing user
            $('.user-item').on('click', function () {
                $(`#password`).prop('readonly', true);
                openModal($(this).data('id'));
            });

            // Open modal function
            function openModal(userId) {
                const modal = $('#userModal');
                modal.show();
                $('#userId').val(userId);
                if (userId !== 0) {
                    $('#deleteButton').show();
                    $('#createButton').hide();
                    $('#saveButton').show();
                    // Fetch user data by id and populate the form
                    $.get(`/Admin/GetUser`, { userId: userId }, function (data) {
                        $('#userId').val(data.user.userId);
                        $('#name').val(data.user.name);
                        $('#email').val(data.user.email);
                        $('#password').val(data.user.password); // Show password
                        $('#company').val(data.company.companyName);
                        $('input[name="Roles"]').prop('checked', false).parent().find('label').css('color', 'red');
                        data.allRoles.forEach(role => {
                            const roleCheckbox = $(`#role_${role.roleId}`);
                            roleCheckbox.prop('checked', data.roles.some(r => r.roleId === role.roleId));
                            roleCheckbox.parent().find('label').css('color', data.roles.some(r => r.roleId === role.roleId) ? 'green' : 'red');
                        });
                    }).fail(function () {
                        console.log("User not found.");
                        alert("User not found.");
                        $('#userModal').hide();
                    });
                } else {
                    $('#userForm')[0].reset();
                    $('#company').val("@Model.Item3.FirstOrDefault()?.CompanyName");
                    $('#deleteButton').hide();
                    $('#createButton').show();
                    $('#saveButton').hide();
                }
            }


            // Close modal
            $('.close').on('click', function () {
                $('#userModal').hide();
            });

            // Save user via AJAX
            $('#userForm').on('submit', function (event) {
                event.preventDefault();
                const userId = $('#userId').val();
                const formData = $(this).serialize();
                const url = '/Admin/SaveUser';

                $.ajax({
                    url: url,
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            location.reload(); // Reload to see changes
                        } else {
                            alert('Failed to save user');
                        }
                    }
                });
            });

            // Delete user via AJAX
            $('#deleteButton').on('click', function () {
                const userId = $('#userId').val();
                if (userId !== "0" && confirm('Are you sure you want to delete this user?')) {
                    $.ajax({
                        url: `/Admin/DeleteUser`,
                        type: 'DELETE',
                        data: { userId: userId },
                        success: function (response) {
                            if (response.success) {
                                location.reload(); // Reload to see changes
                            } else {
                                alert('Failed to delete user');
                            }
                        }
                    });
                }
            });

            // Create user via AJAX
            $('#createButton').on('click', function (event) {
                event.preventDefault();
                const formData = $('#userForm').serialize();
                $.ajax({
                    url: '/Admin/SaveUser',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            location.reload(); // Reload to see changes
                        } else {
                            alert('Failed to create user');
                        }
                    }
                });
            });
        });
    </script>
}
