@model PasswordManagementSystem.Core.ViewModels.CompanyLogsViewModel

@{
    Layout = "~/Views/Shared/AdminSideMenuLayout.cshtml";
}

@section Styles {
    <link href="~/css/admin/company-logs.css" rel="stylesheet">
}

<div class="container">
    <h1>Company Logs</h1>
    <table class="styled-table">
        <thead>
            <tr>
                <th>Date</th>
                <th>User ID</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="logList">
            @foreach (var log in Model.Logs)
            {
                <tr>
                    <td>@log.Date</td>
                    <td>@log.UserId</td>
                    <td>@log.Action</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="pagination">
        <button id="prevPage" disabled>&laquo; Previous</button>
        <span>Page <span id="currentPage">@Model.CurrentPage</span> of <span id="totalPages">@Model.TotalPages</span></span>
        <button id="nextPage">Next &raquo;</button>
    </div>
    <div class="jump-to-page">
        <input type="number" id="pageInput" min="1" max="@Model.TotalPages" placeholder="Page #" />
        <button id="jumpToPage">Go</button>
    </div>
</div>

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            const pageSize = 10; // Her sayfada gösterilecek veri sayısı
            let currentPage = @Model.CurrentPage;
            let totalPages = @Model.TotalPages;

            // Sayfa yükleme fonksiyonu
            function loadPage(page) {
                $.get('/Admin/CompanyLogs', { page: page, pageSize: pageSize, isAjax: true }, function (data) {
                    $('#logList').empty();
                    if (data.logs && data.logs.length > 0) {
                        data.logs.forEach(log => {
                            let listItem = `<tr>
                                                                <td>${log.date}</td>
                                                                <td>${log.userId}</td>
                                                                <td>${log.action}</td>
                                                            </tr>`;
                            $('#logList').append(listItem);
                        });
                    }
                    currentPage = data.currentPage;
                    totalPages = data.totalPages;
                    updatePaginationButtons();
                    updatePageInfo();
                }).fail(function () {
                    alert("An error occurred while loading data.");
                });
            }

            // Sayfalama butonlarını güncelleme fonksiyonu
            function updatePaginationButtons() {
                $('#prevPage').attr('disabled', currentPage === 1);
                $('#nextPage').attr('disabled', currentPage === totalPages);
            }

            // Sayfa bilgilerini güncelleme fonksiyonu
            function updatePageInfo() {
                $('#currentPage').text(currentPage);
                $('#totalPages').text(totalPages);
                $('#pageInput').attr('max', totalPages);
            }

            // "Previous" butonuna tıklama olayı
            $('#prevPage').click(function () {
                if (currentPage > 1) {
                    loadPage(currentPage - 1);
                }
            });

            // "Next" butonuna tıklama olayı
            $('#nextPage').click(function () {
                if (currentPage < totalPages) {
                    loadPage(currentPage + 1);
                }
            });

            // Sayfa numarasına doğrudan gitme olayı
            $('#jumpToPage').click(function () {
                const page = parseInt($('#pageInput').val());
                if (page >= 1 && page <= totalPages) {
                    loadPage(page);
                } else {
                    alert("Invalid page number");
                }
            });

            // Sayfa bilgilerini ilk yüklemede güncelleme
            updatePageInfo();
        });
    </script>
}
